// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

///////////////////////////////*************************////////////////////////////////////////////////////////

model User {
  id            String             @id @default(uuid())
  name          String
  email         String             @unique
  document      String?            @unique
  documentType  DocumentType       @default(cpf)
  password_hash String
  birth_date    DateTime?
  phone         String?
  occupation    String?
  nationality   String?
  maritalStatus MaritalStatusEnum?
  photoUrl      String?
  userType      UserType           @default(client)
  documents     Document[]
  liabilities   Liability[]
  assets        Asset[]
  addressId     String?
  address       Address?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model Heir {
  id             String       @id @default(uuid())
  name           String
  relation       HeirRelation
  phone          String?
  percentage     Decimal
  document       String
  photoUrl       String?
  documentType   DocumentType @default(cpf)
  address        Address?
  documents      Document[]
  is_forced_heir Boolean      @default(true)
  softDeleted    Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  deletedAt      DateTime?
}

model Document {
  id      String       @id @default(uuid())
  fileUrl String
  type    DocumentType

  userId String?
  user   User?   @relation(references: [id], fields: [userId])

  heir   Heir?   @relation(references: [id], fields: [heirId])
  heirId String?

  assetId String?
  asset   Asset?  @relation(references: [id], fields: [assetId])
}

model Liability {
  id           String        @id @default(uuid())
  name         String
  initialValue Decimal
  currentValue Decimal
  type         LiabilityType
  lender       String?
  description  String?
  interestRate Decimal?
  dueDate      DateTime?
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  softDeleted  Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deletedAt    DateTime?
}

model Asset {
  id             String         @id @default(uuid())
  description    String
  initialValue   Decimal
  currentValue   Decimal
  type           AssetType
  liquidityLevel LiquidityLevel
  location       Address?
  documents      Document[]
  userId         String
  user           User           @relation(fields: [userId], references: [id])
  isProtected    Boolean        @default(false) // Holding já protege o patrimônio?
  softDeleted    Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  deletedAt      DateTime?
}

model Address {
  id         String  @id @default(uuid())
  street     String
  number     String
  complement String?
  district   String
  city       String
  state      String
  zipCode    String
  country    String  @default("BR")

  userId  String? @unique
  user    User?   @relation(fields: [userId], references: [id])
  heirId  String? @unique
  heir    Heir?   @relation(references: [id], fields: [heirId])
  assetId String? @unique
  asset   Asset?  @relation(references: [id], fields: [assetId])
}

/////////////////////////////****************************/////////////////////////////////////////

enum UserType {
  client
  admin
  consultant
}

enum DocumentType {
  cpf
  rg
  passport
  cnh
  propertyDeed
  vehicleRegistrationDocument
  testament
}

enum HeirRelation {
  child
  sibling
  parent
  spouse
  friend
  other
}

enum LiabilityType {
  creditCardDebt
  personalLoan
  wageLoan
  carLoan
  mortgage
  overdraft
  businessLoan
  taxDebt
  informalLoan
  other
}

enum AssetType {
  property
  vehicle
  stock
  fixedIncome
  company
  jewelry
  cash
  crypto
  other
}

enum MaritalStatusEnum {
  single
  married
  divorced
  widowed
  separated
}

enum LiquidityLevel {
  high
  medium
  low
}
